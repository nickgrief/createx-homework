// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$custom-typography: mat-typography-config(
  $font-family: '"Lato", sans-serif;',
);
@include mat.core($custom-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$createx-primary: mat.define-palette(mat.$grey-palette, A700);
$createx-accent: mat.define-palette(mat.$deep-orange-palette);

// The warn palette is optional (defaults to red).
$createx-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

$createx-theme: mat.define-light-theme(
  (
    color: (
      primary: $createx-primary,
      accent: $createx-accent,
      warn: $createx-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($createx-theme);

* {
  font-size: 100%;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  padding-top: 32px;
}

.button-close {
  border: none;
  background-color: white;
  position: absolute;
  right: 24px;
  top: 24px;

  img {
    transition: scale 150ms, rotate 500ms;
  }

  img:hover {
    scale: 150%;
    rotate: 360deg;
    filter: brightness(0) saturate(100%) invert(37%) sepia(67%) saturate(2739%) hue-rotate(339deg) brightness(105%)
      contrast(103%);
  }
}

.sign-container {
  width: 486px;
  display: flex;
  flex-direction: column;
  border-radius: 4px;
  position: relative;

  // border for container visibility
  // in the final product there will be no border
  border: 1px solid #787a80;
}

.sign-header {
  text-align: center;
  padding: 0 1rem;
  margin: 0 10%;

  h1 {
    margin-top: 44px;
    font-weight: 700;
  }

  p {
    margin: 24px 0 4px 0;
    color: #787a80;
  }
}

.form {
  display: flex;
  flex-direction: column;
  margin: 0 10%;

  label {
    margin-top: 20px;
    color: #424551;
  }

  input {
    margin-top: 8px;
    border-radius: 4px;
    border-color: #d7dadd;
    border-width: 1px;
    border-style: solid;
    height: 44px;
    padding: 0 1rem;
  }

  textarea {
    margin-top: 8px;
    border-radius: 4px;
    border-color: #d7dadd;
    border-width: 1px;
    border-style: solid;
    padding: 1rem 1rem;
    resize: none;
  }

  p {
    margin-top: 24px;
    color: #424551;
  }

  a {
    color: #ff3f3a;
    text-decoration: none;
  }
}

.form-checkbox-container {
  margin-top: 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: fit-content;
  width: 100%;

  label {
    margin-top: 0;
  }
}

// Code for custom checkmark was taken from https: //www.w3schools.com/howto/howto_css_custom_checkbox.asp
/* Customize the label (the container) */
.custom-checkbox-container {
  display: block;
  position: relative;
  padding-left: 28px;
  // margin-bottom: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
}

/* Create a custom checkbox */
.form-custom-checkmark {
  position: absolute;
  top: 2px;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: #eee;
  border-radius: 3px;
}

/* On mouse-over, add a grey background color */
.custom-checkbox-container:hover input ~ .form-custom-checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.custom-checkbox-container input:checked ~ .form-custom-checkmark {
  background-color: #ff3f3a;
}

/* Create the form-custom-checkmark/indicator (hidden when not checked) */
.form-custom-checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the form-custom-checkmark when checked */
.custom-checkbox-container input:checked ~ .form-custom-checkmark:after {
  display: block;
}

/* Style the form-custom-checkmark/indicator */
.custom-checkbox-container .form-custom-checkmark:after {
  left: 5.3px;
  top: 1px;
  width: 4px;
  height: 9px;
  border: solid white;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

#remember-me {
  height: fit-content;
}

.orange-button {
  height: 44px;
  margin-top: 24px;
  border-radius: 4px;
  border: none;
  background-image: linear-gradient(55.95deg, #ff3f3a 0%, #f75e05 100%);
  color: white;
  font-weight: 700;
  font-size: 14px;
  line-height: 44px;
  transition: all;
  transition-duration: 300ms;

  &:hover {
    scale: 110%;
  }
}

.sign-password-container {
  display: flex;
  flex-direction: column;
  position: relative;
}

.button-show-password {
  background-color: white;
  border: none;
  position: absolute;
  right: 12px;
  bottom: 12px;
}
